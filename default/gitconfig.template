[user]
	name = $GITHUB_NAME
	email = $GITHUB_EMAIL

[init]
	defaultBranch = main

# To avoid typing in credentials
[credential]
    helper = store

[url $GITHUB_SHORT_URL]
	insteadof = $GITHUB_URL

[http "https://github.com"]
    proxy = $GITHUB_PROXY
    sslCAinfo = $ROOT_CA

[core]
	filemode = false
	eol = lf

[core]
    # Use vim as git commit editor
	editor = vim
	autocrlf = input

[merge]
    # Use vimdiff for merge conflicts
	tool = vimdiff

[mergetool]
	prompt = true

[alias]
    # List aliases
    la = "!git config -l | grep alias | cut -c 7-"

    d = difftool

    # Nice, colorful graph visualization
    lg = log --decorate --oneline --graph --branches --date=relative --format=format:'%C(bold blue)%h%C(reset) - %C(bold blue)(%ar) %C(bold yellow)%d%C(reset) %C(green)%s%C(reset) %C(dim green)- %an%C(reset)'
	
	lg1 = log --graph --abbrev-commit --decorate --format=format:'%C(bold blue)%h%C(reset) - %C(bold green)(%ar)%C(reset) %C(white)%s%C(reset) %C(dim white)- %an%C(reset)%C(bold yellow)%d%C(reset)' --all
	lg2 = log --graph --abbrev-commit --decorate --format=format:'%C(bold blue)%h%C(reset) - %C(bold cyan)%aD%C(reset) %C(bold green)(%ar)%C(reset)%C(bold yellow)%d%C(reset)%n''          %C(white)%s%C(reset) %C(dim white)- %an%C(reset)' --all

    dog = log -30 --graph --abbrev-commit --decorate --date-order --format='%C(blue)%h%C(reset) %C(cyan)%cd%C(reset) %s %C(reset)%C(dim)%an%C(reset)%C(auto)%d' --date=short
